---
import GitHub from "./icons/GitHub.astro";
import NextJS from "./icons/NextJS.astro";
import Tailwind from "./icons/Tailwind.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import Spring from "./icons/Spring.astro";
import Java from "./icons/Java.astro";

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  SPRING: {
    name: "Spring Boot",
    class: "bg-[#6DB33F] text-white",
    icon: Spring,
  },
  JAVA: {
    name: "Java",
    class: "bg-[#191a19] text-white",
    icon: Java,
  },
};

const PROJECTS = [
  {
    title: "Genomyc  - Gestión Inventario en Laboratorio",
    description:
      "Desarrollo de sistema de gestión de inventario para un laboratorio clínico utilizando React, Next.js, TypeScript, Prisma, PostgreSQL y Docker. Configuración de Cron Jobs para tareas automatizadas e integración de Sentry para monitoreo de errores.",
    link: null,
    github: null,
    image: "/projects/genomyc-im.webp",
    tags: [TAGS.NEXT, TAGS.TAILWIND],
  },
  {
    title: "D&L American Outlet - E-commerce",
    description:
      "Desarrollo de tienda virtual usando React, NextJs, Prisma, PostgreSQL y ShadCN. Implementación de funcionalidades como gestión de productos, carrito de compras, etc.",
    link: null,
    github: null,
    image: "/projects/dl.webp",
    tags: [TAGS.NEXT, TAGS.TAILWIND],
  },
  {
    title: "Gestor de Inventario Genérico",
    description:
      "Desarrollo de una aplicación web de gestión de inventario optimizada para dispositivos móviles y tablets usando NextJs, Prisma, PostgreSQL y ShadCN. Enfoque en pequeños comerciantes, proporcionando una solución accesible y eficiente para gestionar inventarios y ventas sin necesidad de invertir en sistemas costosos.",
    link: null,
    image: "/projects/generic-im.webp",
    gihub: null,
    tags: [TAGS.NEXT, TAGS.TAILWIND],
  },
  {
    title: "Facturador Electrónico API",
    description:
      "Implementación de un sistema de facturación electrónica cumpliendo con las normativas del SRI (Ecuador) usando Spring Boot con PostgreSQL. Consumo de servicios web SOAP del SRI para la validación y autorización de facturas electrónicas en formato XML.",
    image: "/projects/no-image.webp",
    tags: [TAGS.JAVA, TAGS.SPRING],
  },
];
---

<div class="flex flex-col gap-y-24">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col gap-8 group md:flex-row items-center">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt={title}
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-purple-300/70">{title}</h3>

          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 opacity-90">{description}</div>

            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-5" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
